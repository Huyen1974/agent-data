Purpose: Refactor Qdrant mock for 1536-dim vectors, case-insensitive tags, and single mock file, ensuring all tests pass.
Total tests passing: 30/30.

Summary of changes:
1. Consolidated all Qdrant mock logic into `tests/mocks/qdrant_basic.py` (`FakeQdrantClient`).
2. Removed old mock code from `tests/conftest.py`.
3. Implemented a new fixture `client_with_qdrant_override` in `tests/conftest.py` that:
    - Clears mock data before each test.
    - Patches `QdrantClient` to return `FakeQdrantClient`.
    - Patches the embedding function.
    - Seeds standard sample points (1536-dim vectors, tags lowercased by mock).
4. Updated `FakeQdrantClient`:
    - Constructor now `__init__(self, url, api_key, **kwargs)`.
    - All data handling methods converted to synchronous (`def` instead of `async def`).
    - Implemented/updated methods: `collection_exists`, `upsert_points` (pads to 1536-dim, lowercases tags), `delete_collection`, `create_collection`, `search`, `retrieve`, `scroll`, `count`, `clear_all_data`, `create_payload_index`.
    - Added robust handling for vector input types to prevent `np.array` errors (using `_ensure_flat_float_list`).
    - Ensured `delete` method returns a Pydantic-valid status for `UpdateResult`.
5. Renamed `mock_embedding_function` to `mock_embedding_function_for_conftest` (kept async as per usage) and corrected its vector generation to match seeded data and ensure flat list outputs.
6. Adjusted assertions in `test_search_tag_and_threshold.py` and `test_top_k_larger_than_data.py` to align with corrected mock behavior and data, resolving previous test failures.
7. Ensured the `pytest -q` command now passes with 30/30 tests.
