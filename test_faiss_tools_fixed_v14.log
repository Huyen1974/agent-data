/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/setup/venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform darwin -- Python 3.10.17, pytest-8.3.5, pluggy-1.5.0 -- /Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/setup/venv/bin/python3.10
cachedir: .pytest_cache
rootdir: /Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-0.26.0, mock-3.14.0, cov-6.1.1
asyncio: mode=auto, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... 
----------------------------- live log collection ------------------------------
DEBUG    faiss.loader:loader.py:89 Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
INFO     faiss.loader:loader.py:148 Loading faiss.
INFO     faiss.loader:loader.py:150 Successfully loaded faiss.
INFO     faiss:__init__.py:174 Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
collected 17 items

ADK/agent_data/tests/tools/test_faiss_tools.py::TestSaveMetadataToFaiss::test_save_auto_embed 
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.register_tools:register_tools.py:5 sys.path in Cloud Run at top of register_tools.py: ['/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents', '/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tests/tools', '/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/setup/venv/bin', '/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python310.zip', '/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10', '/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/lib-dynload', '/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/setup/venv/lib/python3.10/site-packages']
INFO     ADK.agent_data.tools.external_tool_registry:external_tool_registry.py:20 OpenAI import successful.
INFO     ADK.agent_data.tools.external_tool_registry:external_tool_registry.py:45 FAISS import successful.
INFO     ADK.agent_data.tools.external_tool_registry:external_tool_registry.py:73 OpenAI client initialized successfully via external registry.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:86 vector_data not provided for index 'test_index'. Attempting to generate embeddings.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:100 Generating embeddings for 2 documents using field 'text'. Expected dimension: 10.
DEBUG    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:137 Generating embedding for doc_id 'doc1' (text: 'Hello world...').
DEBUG    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:151 Successfully generated embedding for doc_id 'doc1'.
DEBUG    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:137 Generating embedding for doc_id 'doc2' (text: 'Another document...').
DEBUG    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:151 Successfully generated embedding for doc_id 'doc2'.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:176 Successfully generated 2 embeddings from 2 documents (out of 2 originally).
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:179 Starting validation for index 'test_index' with 2 metadata entries and 2 vectors.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:208 vector_data is a list. Proceeding with list of vectors.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:276 Validation successful. All 2 processed vectors have dimension 10.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:281 Converting processed vector data to NumPy array.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:287 Creating FAISS index with actual dimension 10 from vector data.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:296 Number of vectors (2) is less than 20. Using IndexFlatL2.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:298 Created FAISS index (IndexFlatL2) with dimension 10.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:331 Adding 2 vectors to the index in batches.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:335 Adding batch 1/1 with 2 vectors to FAISS index (MagicMock)
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:337 Finished adding vectors. Index now contains <MagicMock name='IndexFlatL2().ntotal' id='4665713920'> vectors.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:339 Saving FAISS index locally to: /tmp/test_index.faiss
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:346 Saving metadata locally to: /tmp/test_index.meta
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:351 Attempting to save metadata to Firestore for index: test_index in project: test-project
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:373 Successfully saved metadata to Firestore for index: test_index
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:380 Attempting to save FAISS index and metadata to GCS Bucket: test-bucket
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:390 Uploading /tmp/test_index.faiss to gs://test-bucket/test_index.faiss
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:395 Uploading /tmp/test_index.meta to gs://test-bucket/test_index.meta
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:400 Successfully uploaded FAISS index and metadata for 'test_index' to GCS bucket 'test-bucket'.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:405 Registering FAISS index 'test_index' in Firestore collection 'faiss_indexes_registry'...
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:424 Successfully registered FAISS index 'test_index' in Firestore.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:440 Removed temporary local file: /tmp/test_index.meta
PASSED                                                                   [  5%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestSaveMetadataToFaiss::test_save_with_vector_data 
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:179 Starting validation for index 'test_index_vector' with 2 metadata entries and 2 vectors.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:187 vector_data is a dict. Extracting values as vectors.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:276 Validation successful. All 2 processed vectors have dimension 10.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:281 Converting processed vector data to NumPy array.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:287 Creating FAISS index with actual dimension 10 from vector data.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:296 Number of vectors (2) is less than 20. Using IndexFlatL2.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:298 Created FAISS index (IndexFlatL2) with dimension 10.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:331 Adding 2 vectors to the index in batches.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:335 Adding batch 1/1 with 2 vectors to FAISS index (MagicMock)
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:337 Finished adding vectors. Index now contains <MagicMock name='IndexFlatL2().ntotal' id='4665868192'> vectors.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:339 Saving FAISS index locally to: /tmp/test_index_vector.faiss
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:346 Saving metadata locally to: /tmp/test_index_vector.meta
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:351 Attempting to save metadata to Firestore for index: test_index_vector in project: test-project
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:373 Successfully saved metadata to Firestore for index: test_index_vector
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:380 Attempting to save FAISS index and metadata to GCS Bucket: test-bucket
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:390 Uploading /tmp/test_index_vector.faiss to gs://test-bucket/test_index_vector.faiss
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:395 Uploading /tmp/test_index_vector.meta to gs://test-bucket/test_index_vector.meta
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:400 Successfully uploaded FAISS index and metadata for 'test_index_vector' to GCS bucket 'test-bucket'.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:405 Registering FAISS index 'test_index_vector' in Firestore collection 'faiss_indexes_registry'...
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:424 Successfully registered FAISS index 'test_index_vector' in Firestore.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:440 Removed temporary local file: /tmp/test_index_vector.meta
PASSED                                                                   [ 11%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestSaveMetadataToFaiss::test_save_openai_api_error_during_embedding 
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:86 vector_data not provided for index 'test_openai_api_error_index'. Attempting to generate embeddings.
INFO     ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:100 Generating embeddings for 2 documents using field 'text'. Expected dimension: 10.
DEBUG    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:137 Generating embedding for doc_id 'doc1' (text: 'Text that will cause embedding error...').
ERROR    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:156 Error generating embedding for doc_id 'doc1': Mocked API Error
Traceback (most recent call last):
  File "/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tools/save_metadata_to_faiss_tool.py", line 138, in save_metadata_to_faiss
    embedding = get_openai_embedding(text=text_to_embed_val)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1114, in __call__
    return self._mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1118, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1173, in _execute_mock_call
    raise effect
openai.APIError: Mocked API Error
DEBUG    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:137 Generating embedding for doc_id 'doc2' (text: 'Another text, will also error...').
ERROR    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:156 Error generating embedding for doc_id 'doc2': Mocked API Error
Traceback (most recent call last):
  File "/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tools/save_metadata_to_faiss_tool.py", line 138, in save_metadata_to_faiss
    embedding = get_openai_embedding(text=text_to_embed_val)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1114, in __call__
    return self._mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1118, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1173, in _execute_mock_call
    raise effect
  File "/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tools/save_metadata_to_faiss_tool.py", line 138, in save_metadata_to_faiss
    embedding = get_openai_embedding(text=text_to_embed_val)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1114, in __call__
    return self._mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1118, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1173, in _execute_mock_call
    raise effect
openai.APIError: Mocked API Error
ERROR    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:168 No embeddings could be generated successfully. Check input data, text_field_to_embed, and OpenAI service.
ERROR    ADK.agent_data.tools.save_metadata_to_faiss_tool:save_metadata_to_faiss_tool.py:476 ValueError during FAISS processing for index 'test_openai_api_error_index': No embeddings could be generated. Check input data and OpenAI service.
Traceback (most recent call last):
  File "/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tools/save_metadata_to_faiss_tool.py", line 170, in save_metadata_to_faiss
    raise ValueError("No embeddings could be generated. Check input data and OpenAI service.")
ValueError: No embeddings could be generated. Check input data and OpenAI service.
PASSED                                                                   [ 17%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestSaveMetadataToFaiss::test_save_gcs_upload_faiss_fails FAILED [ 23%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestLoadMetadataFromFaiss::test_load_completed 
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:55 Checking Firestore status for index: test_load in collection 'faiss_indexes_registry'
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:74 Firestore data for 'test_load': vectorStatus=completed, gcs_meta_path=gs://test-bucket/test_load.meta
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:91 Firestore status check passed for index 'test_load'. Using gcs_meta_path: gs://test-bucket/test_load.meta
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:110 Attempting GCS download using path from Firestore: gs://test-bucket/test_load.meta
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:139 Loading metadata from: /tmp/test_load.meta
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:148 Successfully loaded metadata for 'test_load'. Execution time: 1.0232s
PASSED                                                                   [ 29%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestLoadMetadataFromFaiss::test_load_pending 
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:55 Checking Firestore status for index: test_pending_idx in collection 'faiss_indexes_registry'
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:74 Firestore data for 'test_pending_idx': vectorStatus=pending, gcs_meta_path=None
WARNING  ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:77 Index 'test_pending_idx' vectorStatus is 'pending', not 'completed'.
PASSED                                                                   [ 35%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestLoadMetadataFromFaiss::test_load_meta_unpickling_error 
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:55 Checking Firestore status for index: test_unpickle_error in collection 'faiss_indexes_registry'
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:74 Firestore data for 'test_unpickle_error': vectorStatus=completed, gcs_meta_path=gs://test-bucket/test_unpickle_error.meta
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:91 Firestore status check passed for index 'test_unpickle_error'. Using gcs_meta_path: gs://test-bucket/test_unpickle_error.meta
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:110 Attempting GCS download using path from Firestore: gs://test-bucket/test_unpickle_error.meta
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:139 Loading metadata from: /tmp/test_unpickle_error.meta
ERROR    ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:165 General error in load_metadata_from_faiss for 'test_unpickle_error': Mocked Unpickling Error
Traceback (most recent call last):
  File "/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tools/load_metadata_from_faiss_tool.py", line 141, in load_metadata_from_faiss
    loaded_data = pickle.load(f)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1114, in __call__
    return self._mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1118, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1173, in _execute_mock_call
    raise effect
_pickle.UnpicklingError: Mocked Unpickling Error
PASSED                                                                   [ 41%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestLoadMetadataFromFaiss::test_load_not_exists 
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:55 Checking Firestore status for index: test_not_exists in collection 'faiss_indexes_registry'
WARNING  ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:63 Index 'test_not_exists' not found in Firestore registry.
FAILED                                                                   [ 47%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestLoadMetadataFromFaiss::test_load_gcs_meta_download_fails FAILED [ 52%]
ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_success 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:270 Executing query_metadata_faiss tool for index 'test_query', query_text (was key) 'find similar content to doc 0' (top_k=1).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:277 Generating embedding for query text: 'find similar content to doc 0' directly.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:292 Successfully generated embedding for query text 'find similar content to doc 0'. Vector length: 5
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:72 Checking Firestore status for index: test_query in collection 'faiss_indexes_registry' (Project: test-project, DB: test-db)
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:90 Firestore data for 'test_query': vectorStatus=completed, gcs_faiss_path=gs://test-bucket/test_query.faiss, gcs_meta_path=gs://test-bucket/test_query.meta
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:110 Firestore status check passed for index 'test_query'.
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:117 Local FAISS index file missing: /tmp/test_query.faiss. Attempting download from gs://test-bucket/test_query.faiss
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:126 Local metadata file missing: /tmp/test_query.meta. Attempting download from gs://test-bucket/test_query.meta
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:133 GCS download attempt finished for index 'test_query'. Files downloaded: {'index': True, 'meta': True}
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:136 Loading FAISS index for query: /tmp/test_query.faiss
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:139 Loaded FAISS index 'test_query' with dimension 5.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:141 Loading metadata for query: /tmp/test_query.meta
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:148 Loaded 2 metadata entries and 2 stored IDs.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:151 Validating query vector dimension (5) against index dimension (5).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:159 Query vector validation successful.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:163 Performing FAISS search for top 1 neighbors.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:166 FAISS search completed. Found indices: [[0]], Distances: [[0.10000000149011612]]
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:198 Retrieved 1 metadata results for query.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:217 query_metadata_faiss_internal finished for index 'test_query'. Status: success. Time: 0.7078s
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:252 Starting cleanup for internal query on index 'test_query'.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:266 Cleanup finished for internal query on index 'test_query'.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:331 FAISS query completed. Returning 1 neighbors' metadata for index 'test_query'.
PASSED                                                                   [ 58%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector

ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_pending 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:270 Executing query_metadata_faiss tool for index 'test_query_pending', query_text (was key) 'q' (top_k=1).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:277 Generating embedding for query text: 'q' directly.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:292 Successfully generated embedding for query text 'q'. Vector length: 5
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:72 Checking Firestore status for index: test_query_pending in collection 'faiss_indexes_registry' (Project: test-project, DB: test-db)
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:90 Firestore data for 'test_query_pending': vectorStatus=pending, gcs_faiss_path=None, gcs_meta_path=None
WARNING  ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:93 Index 'test_query_pending' vectorStatus is 'pending', not 'completed'.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:252 Starting cleanup for internal query on index 'test_query_pending'.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:266 Cleanup finished for internal query on index 'test_query_pending'.
ERROR    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:306 Internal FAISS query failed for index 'test_query_pending': Index 'test_query_pending' is not ready (vectorStatus: pending).
PASSED                                                                   [ 64%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector

ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_not_exists 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:270 Executing query_metadata_faiss tool for index 'test_query_not_exists', query_text (was key) 'q' (top_k=1).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:277 Generating embedding for query text: 'q' directly.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:292 Successfully generated embedding for query text 'q'. Vector length: 5
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:72 Checking Firestore status for index: test_query_not_exists in collection 'faiss_indexes_registry' (Project: test-project, DB: test-db)
WARNING  ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:78 Index 'test_query_not_exists' not found in Firestore registry.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:252 Starting cleanup for internal query on index 'test_query_not_exists'.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:266 Cleanup finished for internal query on index 'test_query_not_exists'.
ERROR    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:306 Internal FAISS query failed for index 'test_query_not_exists': Index 'test_query_not_exists' not found in Firestore registry.
PASSED                                                                   [ 70%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector

ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_firestore_error 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:270 Executing query_metadata_faiss tool for index 'test_firestore_error_query', query_text (was key) 'some query' (top_k=1).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:277 Generating embedding for query text: 'some query' directly.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:292 Successfully generated embedding for query text 'some query'. Vector length: 5
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:72 Checking Firestore status for index: test_firestore_error_query in collection 'faiss_indexes_registry' (Project: test-project, DB: test-db)
ERROR    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:245 General error during FAISS query internal for 'test_firestore_error_query': 503 Mocked Firestore Service Unavailable
Traceback (most recent call last):
  File "/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tools/query_metadata_faiss_tool.py", line 75, in query_metadata_faiss_internal
    doc = doc_ref.get()
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1114, in __call__
    return self._mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1118, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1173, in _execute_mock_call
    raise effect
google.api_core.exceptions.ServiceUnavailable: 503 Mocked Firestore Service Unavailable
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:252 Starting cleanup for internal query on index 'test_firestore_error_query'.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:266 Cleanup finished for internal query on index 'test_firestore_error_query'.
ERROR    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:306 Internal FAISS query failed for index 'test_firestore_error_query': Unexpected error during FAISS query: 503 Mocked Firestore Service Unavailable
PASSED                                                                   [ 76%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector

ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_gcs_download_error 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:270 Executing query_metadata_faiss tool for index 'test_gcs_error_query', query_text (was key) 'another query' (top_k=1).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:277 Generating embedding for query text: 'another query' directly.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:292 Successfully generated embedding for query text 'another query'. Vector length: 5
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:72 Checking Firestore status for index: test_gcs_error_query in collection 'faiss_indexes_registry' (Project: test-project, DB: test-db)
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:90 Firestore data for 'test_gcs_error_query': vectorStatus=completed, gcs_faiss_path=gs://test-bucket/test_gcs_error.faiss, gcs_meta_path=gs://test-bucket/test_gcs_error.meta
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:110 Firestore status check passed for index 'test_gcs_error_query'.
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:117 Local FAISS index file missing: /tmp/test_gcs_error_query.faiss. Attempting download from gs://test-bucket/test_gcs_error.faiss
ERROR    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:245 General error during FAISS query internal for 'test_gcs_error_query': 404 Mocked GCS File Not Found
Traceback (most recent call last):
  File "/Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/ADK/agent_data/tools/query_metadata_faiss_tool.py", line 119, in query_metadata_faiss_internal
    _download_gcs_file(storage_client, bucket_name, blob_name, local_index_path)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1114, in __call__
    return self._mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1118, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "/opt/homebrew/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/mock.py", line 1173, in _execute_mock_call
    raise effect
google.api_core.exceptions.NotFound: 404 Mocked GCS File Not Found
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:252 Starting cleanup for internal query on index 'test_gcs_error_query'.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:266 Cleanup finished for internal query on index 'test_gcs_error_query'.
ERROR    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:306 Internal FAISS query failed for index 'test_gcs_error_query': Unexpected error during FAISS query: 404 Mocked GCS File Not Found
PASSED                                                                   [ 82%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector

ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_faiss_search_error 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
FAILED                                                                   [ 88%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector

ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_firestore_missing_gcs_faiss_path 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
FAILED                                                                   [ 94%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector

ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_with_local_files_exist 
-------------------------------- live log setup --------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
-------------------------------- live log call ---------------------------------
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:270 Executing query_metadata_faiss tool for index 'test_local_files', query_text (was key) 'query for local' (top_k=1).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:277 Generating embedding for query text: 'query for local' directly.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:292 Successfully generated embedding for query text 'query for local'. Vector length: 5
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:72 Checking Firestore status for index: test_local_files in collection 'faiss_indexes_registry' (Project: test-project, DB: test-db)
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:90 Firestore data for 'test_local_files': vectorStatus=completed, gcs_faiss_path=gs://test-bucket/test_local_files.faiss, gcs_meta_path=gs://test-bucket/test_local_files.meta
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:110 Firestore status check passed for index 'test_local_files'.
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
DEBUG    google.auth._default:_default.py:278 Checking None for explicit credentials as part of auth process...
DEBUG    google.auth._default:_default.py:250 Checking Cloud SDK credentials as part of auth process...
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:122 Found local FAISS index file: /tmp/test_local_files.faiss
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:131 Found local metadata file: /tmp/test_local_files.meta
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:133 GCS download attempt finished for index 'test_local_files'. Files downloaded: {'index': False, 'meta': False}
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:136 Loading FAISS index for query: /tmp/test_local_files.faiss
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:139 Loaded FAISS index 'test_local_files' with dimension 5.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:141 Loading metadata for query: /tmp/test_local_files.meta
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:148 Loaded 1 metadata entries and 1 stored IDs.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:151 Validating query vector dimension (5) against index dimension (5).
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:159 Query vector validation successful.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:163 Performing FAISS search for top 1 neighbors.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:166 FAISS search completed. Found indices: [[0]], Distances: [[0.05000000074505806]]
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:198 Retrieved 1 metadata results for query.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:217 query_metadata_faiss_internal finished for index 'test_local_files'. Status: success. Time: 0.7153s
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:252 Starting cleanup for internal query on index 'test_local_files'.
DEBUG    ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:266 Cleanup finished for internal query on index 'test_local_files'.
INFO     ADK.agent_data.tools.query_metadata_faiss_tool:query_metadata_faiss_tool.py:331 FAISS query completed. Returning 1 neighbors' metadata for index 'test_local_files'.
PASSED                                                                   [100%]
------------------------------ live log teardown -------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector


=================================== FAILURES ===================================
___________ TestSaveMetadataToFaiss.test_save_gcs_upload_faiss_fails ___________

self = <test_faiss_tools.TestSaveMetadataToFaiss object at 0x10b66cee0>
mock_pickle_dump = <MagicMock name='dump' id='4666947280'>
mock_faiss_write_index = <MagicMock name='write_index' id='4666955264'>
MockFaissIndexFlatL2 = <MagicMock name='IndexFlatL2' id='4666963088'>
mock_get_embedding = <MagicMock name='get_openai_embedding' id='4666987360'>
mock_firestore_constructor = <MagicMock name='Client' id='4666995184'>
mock_upload_with_retry = <MagicMock name='upload_with_retry' id='4666404592'>
mock_storage_client = <MagicMock name='Client' id='4666396576'>
mock_firestore_client = (<MagicMock name='Client()' id='4666850464'>, <MagicMock name='Client().collection().document()' id='4666907696'>)
mocker = <pytest_mock.plugin.MockerFixture object at 0x116181ff0>

    @patch(f"{SAVE_TOOL_MODULE_PATH}.storage.Client")
    @patch(f"{SAVE_TOOL_MODULE_PATH}.upload_with_retry")
    @patch(FIRESTORE_CLIENT_PATH)
    @patch(f"{SAVE_TOOL_MODULE_PATH}.get_openai_embedding")
    @patch(f"{SAVE_TOOL_MODULE_PATH}.faiss.IndexFlatL2")
    @patch(f"{SAVE_TOOL_MODULE_PATH}.faiss.write_index")
    @patch(f"{SAVE_TOOL_MODULE_PATH}.pickle.dump")
    def test_save_gcs_upload_faiss_fails(self, mock_pickle_dump, mock_faiss_write_index, MockFaissIndexFlatL2,
                                         mock_get_embedding, mock_firestore_constructor, mock_upload_with_retry,
                                         mock_storage_client, mock_firestore_client, mocker):
        from ADK.agent_data.tools.save_metadata_to_faiss_tool import save_metadata_to_faiss
        mock_firestore_constructor.return_value = mock_firestore_client[0]
        mock_get_embedding.return_value = np.array([0.1]*10, dtype=np.float32)
>       mock_upload_with_retry.side_effect = google.api_core.exceptions.GoogleAPICallError("GCS upload failed")
E       NameError: name 'google' is not defined

ADK/agent_data/tests/tools/test_faiss_tools.py:345: NameError
________________ TestLoadMetadataFromFaiss.test_load_not_exists ________________

self = <test_faiss_tools.TestLoadMetadataFromFaiss object at 0x10b66da50>
mock_firestore_constructor = <MagicMock name='Client' id='4667958432'>
mock_firestore_client = (<MagicMock name='Client()' id='4667667312'>, <MagicMock name='Client().collection().document()' id='4667645120'>)

    @patch(FIRESTORE_CLIENT_PATH)
    def test_load_not_exists(self, mock_firestore_constructor, mock_firestore_client):
        from ADK.agent_data.tools.load_metadata_from_faiss_tool import load_metadata_from_faiss
    
        mock_firestore_constructor.return_value = mock_firestore_client[0]
        mock_doc_ref = mock_firestore_client[1]
    
        mock_doc_snapshot = MagicMock()
        mock_doc_snapshot.exists = False
        mock_doc_ref.get.return_value = mock_doc_snapshot
    
        result = load_metadata_from_faiss("test_not_exists")
    
        assert result["meta"]["status"] == "error", f"Actual result: {result}"
        assert result["meta"].get("error_type") == "IndexNotRegisteredError"
>       assert "index not found" in result.get("error", "").lower()
E       assert 'index not found' in "index 'test_not_exists' not found in firestore registry."
E        +  where "index 'test_not_exists' not found in firestore registry." = <built-in method lower of str object at 0x1163d4dc0>()
E        +    where <built-in method lower of str object at 0x1163d4dc0> = "Index 'test_not_exists' not found in Firestore registry.".lower
E        +      where "Index 'test_not_exists' not found in Firestore registry." = <built-in method get of dict object at 0x1163c0f80>('error', '')
E        +        where <built-in method get of dict object at 0x1163c0f80> = {'error': "Index 'test_not_exists' not found in Firestore registry.", 'meta': {'error_type': 'IndexNotRegisteredError', 'execution_time': 0.00017189979553222656, 'status': 'error'}}.get

ADK/agent_data/tests/tools/test_faiss_tools.py:477: AssertionError
------------------------------ Captured log call -------------------------------
INFO     ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:55 Checking Firestore status for index: test_not_exists in collection 'faiss_indexes_registry'
WARNING  ADK.agent_data.tools.load_metadata_from_faiss_tool:load_metadata_from_faiss_tool.py:63 Index 'test_not_exists' not found in Firestore registry.
_________ TestLoadMetadataFromFaiss.test_load_gcs_meta_download_fails __________

self = <test_faiss_tools.TestLoadMetadataFromFaiss object at 0x10b66dcf0>
mock_download_gcs_file = <MagicMock name='_download_gcs_file' id='4667583760'>
mock_firestore_constructor = <MagicMock name='Client' id='4667573152'>
mock_firestore_client = (<MagicMock name='Client()' id='4667722000'>, <MagicMock name='Client().collection().document()' id='4667693744'>)

    @patch(FIRESTORE_CLIENT_PATH)
    @patch(f"{LOAD_TOOL_MODULE_PATH}._download_gcs_file")
    def test_load_gcs_meta_download_fails(self, mock_download_gcs_file, mock_firestore_constructor, mock_firestore_client):
        from ADK.agent_data.tools.load_metadata_from_faiss_tool import load_metadata_from_faiss
        mock_firestore_constructor.return_value = mock_firestore_client[0]
        mock_doc_snapshot = MagicMock()
        mock_doc_snapshot.exists = True
        mock_doc_snapshot.to_dict.return_value = {
            "vectorStatus": "completed",
            "gcs_meta_path": "gs://test-bucket/test_load_fail.meta"
        }
        mock_firestore_client[1].get.return_value = mock_doc_snapshot
>       mock_download_gcs_file.side_effect = google.api_core.exceptions.NotFound("GCS file not found")
E       NameError: name 'google' is not defined

ADK/agent_data/tests/tools/test_faiss_tools.py:491: NameError
_____________ TestQueryMetadataFaiss.test_query_faiss_search_error _____________

self = <test_faiss_tools.TestQueryMetadataFaiss object at 0x10b66da80>
mock_pickle_load = <MagicMock name='load' id='4668891648'>
mock_builtin_open = <MagicMock name='open' id='4669077344'>
mock_internal_download_gcs = <MagicMock name='_download_gcs_file' id='4669068320'>
mock_faiss_read_index = <MagicMock name='read_index' id='4668212752'>
mock_get_embedding = <MagicMock name='get_openai_embedding' id='4668220624'>
mock_firestore_constructor = <MagicMock name='Client' id='4668566656'>
mock_firestore_client = (<MagicMock id='4668422848'>, <MagicMock name='mock.collection().document()' id='4668179648'>)
mocker = <pytest_mock.plugin.MockerFixture object at 0x1164f8a60>

    @patch(FIRESTORE_CLIENT_PATH)
    @patch("ADK.agent_data.tools.query_metadata_faiss_tool.get_openai_embedding")
    @patch(FAISS_READ_INDEX_QUERY_PATH)
    @patch(DOWNLOAD_GCS_QUERY_PATH)
    @patch(f"{QUERY_TOOL_MODULE_PATH}.open")
    @patch(PICKLE_LOAD_QUERY_PATH)
    async def test_query_faiss_search_error(self, mock_pickle_load, mock_builtin_open, mock_internal_download_gcs,
                                            mock_faiss_read_index, mock_get_embedding,
                                            mock_firestore_constructor, mock_firestore_client, mocker):
        from ADK.agent_data.tools.query_metadata_faiss_tool import query_metadata_faiss
        mock_agent_context = MagicMock()
    
        # Case 1: get_openai_embedding itself fails
>       mock_get_embedding.side_effect = openai.APIError("Simulated OpenAI API Error")
E       TypeError: APIError.__init__() missing 1 required positional argument: 'request'

ADK/agent_data/tests/tools/test_faiss_tools.py:737: TypeError
------------------------------ Captured log setup ------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
---------------------------- Captured log teardown -----------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
______ TestQueryMetadataFaiss.test_query_firestore_missing_gcs_faiss_path ______

self = <test_faiss_tools.TestQueryMetadataFaiss object at 0x10b66cac0>
mock_get_embedding = <MagicMock name='get_openai_embedding' id='4669161632'>
mock_firestore_constructor = <MagicMock name='Client' id='4668608752'>
mock_firestore_client = (<MagicMock id='4669284480'>, <MagicMock name='mock.collection().document()' id='4669216688'>)

    @patch(FIRESTORE_CLIENT_PATH)
    @patch("ADK.agent_data.tools.query_metadata_faiss_tool.get_openai_embedding")
    async def test_query_firestore_missing_gcs_faiss_path(self, mock_get_embedding,
                                                          mock_firestore_constructor, mock_firestore_client):
        from ADK.agent_data.tools.query_metadata_faiss_tool import query_metadata_faiss
        mock_agent_context = MagicMock()
    
        # Case 1: get_openai_embedding fails
>       mock_get_embedding.side_effect = openai.APIError("Simulated OpenAI API Error for missing_gcs_path")
E       TypeError: APIError.__init__() missing 1 required positional argument: 'request'

ADK/agent_data/tests/tools/test_faiss_tools.py:806: TypeError
------------------------------ Captured log setup ------------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
---------------------------- Captured log teardown -----------------------------
DEBUG    asyncio:selector_events.py:54 Using selector: KqueueSelector
=============================== warnings summary ===============================
setup/venv/lib/python3.10/site-packages/faiss/loader.py:49
  /Users/nmhuyen/Documents/Manual Deploy/mpc_back_end_for_agents/setup/venv/lib/python3.10/site-packages/faiss/loader.py:49: DeprecationWarning: numpy.core._multiarray_umath is deprecated and has been renamed to numpy._core._multiarray_umath. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core._multiarray_umath.__cpu_features__.
    from numpy.core._multiarray_umath import __cpu_features__

<frozen importlib._bootstrap>:241
  <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute

<frozen importlib._bootstrap>:241
  <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute

<frozen importlib._bootstrap>:241
  <frozen importlib._bootstrap>:241: DeprecationWarning: builtin type swigvarlink has no __module__ attribute

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ADK/agent_data/tests/tools/test_faiss_tools.py::TestSaveMetadataToFaiss::test_save_gcs_upload_faiss_fails
FAILED ADK/agent_data/tests/tools/test_faiss_tools.py::TestLoadMetadataFromFaiss::test_load_not_exists
FAILED ADK/agent_data/tests/tools/test_faiss_tools.py::TestLoadMetadataFromFaiss::test_load_gcs_meta_download_fails
FAILED ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_faiss_search_error
FAILED ADK/agent_data/tests/tools/test_faiss_tools.py::TestQueryMetadataFaiss::test_query_firestore_missing_gcs_faiss_path
=================== 5 failed, 12 passed, 4 warnings in 5.70s ===================
