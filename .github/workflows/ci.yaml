name: CI Test Suite

on:
  push:
    branches:
      - main
      - ci/106-final
      - ci/106-fix-flag
      - ci/106-fix-flag2
      - ci/106-final-pass
      - ci/106-fix-3
      - ci/106-fix-4
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test_fast:
    name: Test Suite (157 tests)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: ./
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report

      - name: Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Verify authentication
        working-directory: ./
        run: gcloud auth list

      - name: Assert Collection Count = 157
        working-directory: ./
        run: |
          echo "Checking test collection count..."
          tests=$(pytest --collect-only -q 2>/dev/null | grep '^tests/' | wc -l)
          echo "Collected tests: $tests"
          if [ "$tests" != "157" ]; then
            echo "ERROR: Expected exactly 157 tests, got $tests"
            echo "Current collected tests:"
            pytest --collect-only -q 2>/dev/null | grep '^tests/' | head -10
            echo "..."
            exit 1
          fi
          echo "✅ SUCCESS: Collected exactly 157 tests as expected"

      - name: Run full test suite
        working-directory: ./
        run: |
          echo "Running full test suite with 157 tests..."
          python -m pytest -v --strict-markers --json-report --json-report-file=.report.json

      - name: Validate Results
        working-directory: ./
        run: |
          echo "Validating test results..."
          python - <<'PY'
          import json, sys
          try:
            with open('.report.json', 'r') as f:
              report = json.load(f)
            
            total = report['summary']['total']
            failed = report['summary']['failed'] 
            skipped = report['summary']['skipped']
            passed = report['summary']['passed']
            
            print(f"Test Results: {passed} passed, {failed} failed, {skipped} skipped, {total} total")
            
            # Validate total count is 157
            if total != 157:
              print(f"ERROR: Expected 157 total tests, got {total}")
              sys.exit(1)
            
            # Fail if any test failed
            if failed > 0:
              print(f"ERROR: {failed} tests failed")
              sys.exit(1)
              
            # Warn if too many skipped (allow up to 6)
            if skipped > 6:
              print(f"ERROR: Too many tests skipped ({skipped} > 6)")
              sys.exit(1)
              
            print("✅ All validations passed!")
          except Exception as e:
            print(f"ERROR reading test report: {e}")
            sys.exit(1)
          PY

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-157
          path: .report.json
