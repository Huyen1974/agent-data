name: Deploy Dummy Container
# CLI153.2: Fixed CI for production deployment with proper secret validation

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: 'recursive'

      - name: Validate GitHub Secrets
        id: validate-secrets
        run: |
          echo "🔍 Validating GitHub secrets..."
          
          # Check if required secrets exist
                  if [ -z "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}" ]; then
          echo "❌ GCP_WORKLOAD_IDENTITY_PROVIDER secret is missing"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          if [ -z "${{ secrets.GCP_SERVICE_ACCOUNT }}" ]; then
            echo "❌ GCP_SERVICE_ACCOUNT secret is missing"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          # Determine project ID based on branch
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            PROJECT_SECRET="${{ secrets.PROJECT_ID }}"
            PROJECT_NAME="production"
          else
            PROJECT_SECRET="${{ secrets.PROJECT_ID_TEST }}"
            PROJECT_NAME="test"
          fi
          
          if [ -z "$PROJECT_SECRET" ]; then
            echo "❌ PROJECT_ID secret is missing for $PROJECT_NAME environment"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          # Validate service account email format
          if [[ ! "${{ secrets.GCP_SERVICE_ACCOUNT }}" =~ ^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.iam\.gserviceaccount\.com$ ]]; then
            echo "❌ GCP_SERVICE_ACCOUNT format is invalid"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          echo "✅ All secrets are valid for $PROJECT_NAME environment"
          echo "valid=true" >> $GITHUB_OUTPUT
          echo "project_id=$PROJECT_SECRET" >> $GITHUB_OUTPUT
          echo "environment=$PROJECT_NAME" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        if: steps.validate-secrets.outputs.valid == 'true'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: 'access_token'

      - name: Set up Cloud SDK
        if: steps.validate-secrets.outputs.valid == 'true'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ steps.validate-secrets.outputs.project_id }}

      - name: Verify Authentication
        if: steps.validate-secrets.outputs.valid == 'true'
        run: |
          echo "🔐 Verifying GCP authentication..."
          gcloud auth list --filter=status:ACTIVE --format="value(account)" | head -1
          echo "📋 Using project: ${{ steps.validate-secrets.outputs.project_id }}"
          echo "🌍 Environment: ${{ steps.validate-secrets.outputs.environment }}"
          gcloud config set project ${{ steps.validate-secrets.outputs.project_id }}

      - name: Create Artifact Registry repository
        if: steps.validate-secrets.outputs.valid == 'true'
        run: |
          echo "📦 Creating Artifact Registry repository..."
          gcloud artifacts repositories create agent-data \
            --repository-format=docker \
            --location=asia-southeast1 \
            --description="Docker repository for agent-data project" \
            --project=${{ steps.validate-secrets.outputs.project_id }} || echo "Repository already exists"

      - name: Configure Docker to use gcloud
        if: steps.validate-secrets.outputs.valid == 'true'
        run: |
          echo "🐳 Configuring Docker authentication..."
          gcloud auth configure-docker asia-southeast1-docker.pkg.dev

      - name: Build and push container
        if: steps.validate-secrets.outputs.valid == 'true'
        run: |
          echo "🔨 Building and pushing dummy container..."
          
          # Check if dummy container exists
          if [ ! -d "containers/dummy_container" ]; then
            echo "⚠️  No dummy_container directory found, skipping deployment"
            exit 0
          fi
          
          # Build with retry logic
          IMAGE="asia-southeast1-docker.pkg.dev/${{ steps.validate-secrets.outputs.project_id }}/agent-data/dummy-container:${{ github.sha }}"
          
          for attempt in 1 2 3; do
            echo "🔄 Build attempt $attempt..."
            if docker build -t "$IMAGE" containers/dummy_container; then
              echo "✅ Successfully built dummy container"
              break
            else
              echo "❌ Build attempt $attempt failed"
              if [ $attempt -eq 3 ]; then
                echo "❌ All build attempts failed"
                exit 1
              fi
              sleep 10
            fi
          done
          
          # Push with retry logic
          for attempt in 1 2 3; do
            echo "🔄 Push attempt $attempt..."
            if docker push "$IMAGE"; then
              echo "✅ Successfully pushed dummy container"
              break
            else
              echo "❌ Push attempt $attempt failed"
              if [ $attempt -eq 3 ]; then
                echo "❌ All push attempts failed"
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Deploy to Cloud Run
        if: steps.validate-secrets.outputs.valid == 'true'
        run: |
          echo "🚀 Deploying to Cloud Run..."
          
          IMAGE="asia-southeast1-docker.pkg.dev/${{ steps.validate-secrets.outputs.project_id }}/agent-data/dummy-container:${{ github.sha }}"
          
          # Deploy with retry logic
          for attempt in 1 2 3; do
            echo "🔄 Deploy attempt $attempt..."
            if gcloud run deploy dummy-container \
              --image="$IMAGE" \
              --platform=managed \
              --region=asia-southeast1 \
              --allow-unauthenticated \
              --memory=256Mi \
              --cpu=1 \
              --min-instances=0 \
              --max-instances=3 \
              --timeout=60 \
              --port=8080 \
              --project=${{ steps.validate-secrets.outputs.project_id }}; then
              echo "✅ Successfully deployed dummy container"
              break
            else
              echo "❌ Deploy attempt $attempt failed"
              if [ $attempt -eq 3 ]; then
                echo "❌ All deploy attempts failed"
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Verify deployment
        if: steps.validate-secrets.outputs.valid == 'true'
        run: |
          echo "🔍 Verifying deployment..."
          gcloud run services describe dummy-container --region=asia-southeast1 --project=${{ steps.validate-secrets.outputs.project_id }} --format="value(status.url)" 